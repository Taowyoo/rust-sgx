[package]
name = "ias"
version = "0.2.0"
authors = ["Fortanix, Inc."]
license = "MPL-2.0"
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
rustc_version = "0.4.0"

[dependencies]
base64 = "0.13"
bitflags = "1"
byteorder = "1.0"
document-features = "0.2.3"
log = "0.4"
mbedtls = { version = "0.8.0", features = ["std"], default-features = false, optional = true }
once_cell = "1.13.0"
percent-encoding = "2.1"
pkix = "0.1"
serde_bytes = "0.11"
serde-bytes-repr = "0.1"
serde_json = "1"
serde = { version = "1.0.7", features = ["derive"] }
sgx-isa = { version = "0.4", path = "../sgx-isa" }
sgx_pkix = { version = "0.1", path = "../sgx_pkix" }
url = "2.2"

[target.'cfg(not(target_env="sgx"))'.dependencies]
reqwest = { version = "0.11", features = ["json"], optional = true }

[dev-dependencies]
tokio = { version = "1", features = ["macros"] }

[target.'cfg(not(target_env="sgx"))'.dev-dependencies]
clap = "2.23.3"
env_logger = "0.9.0"

report-test = { version = "0.3", path = "../report-test" }
aesm-client = { version = "0.5", features = ["sgxs"], path = "../aesm-client" }
sgxs = { version = "0.7", path = "../sgxs" }
sgxs-loaders = { version = "0.3", path = "../sgxs-loaders" }

[features]
## Enables building a client to contact the IAS service
client = ["reqwest"]
## Enables authentication to IAS service with a client certificate
client-certificate = ["reqwest/native-tls"]
default = ["ias_version_v3", "ias_version_v4"]
## Enables support for IAS version 4
ias_version_v4 = []
## Enables support for IAS version 3
ias_version_v3 = []
## Enables manipulation of IAS attestation. The following environment variables can be used to manipulate the attestation:
## - IAS_EXTRA_ADVISORIES: A ',' separated list of additional advisory IDs to include
## - IAS_QUOTE_STATUS: Enables overwriting the quote status in the quote. Possible values are: OK, SIGNATURE_INVALID,
##   GROUP_REVOKED, SIGNATURE_REVOKED, KEY_REVOKED, SIG_RL_VERSION_MISMATCH, GROUP_OUT_OF_DATE, CONFIGURATION_NEEDED,
##   SW_HARDENING_NEEDED, CONFIGURATION_AND_SW_HARDENING_NEEDED
## This feature is only available in debug mode
manipulate_attestation = []

[[example]]
name = "attestation-tool"
required-features = ["client", "mbedtls"]
